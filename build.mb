sector config
	section files
		str obj 'obj/'
		str src './'

		str libname 'mastr'
		str libfile 'lib$(/config/files/libname).a'
		str dylibfile 'lib$(/config/files/libname).so'
		str testfile 'mcfg_test'

		list str sources
			'mastr'

		list str test_sources
			'debug'
	end

	section mariebuild
		u8 default_log_level 2
		str build_type 'incremental'

		str cc 'clang'
		str cflags '-std=c17 -gdwarf-4 -Wextra -Wall -Iinclude/ -Isrc/'
		str ldflags '-lm -L. -l$(/config/files/libname)'

		list str targets 'clean', 'build'
		str default 'build'
	end
end

sector targets
	section clean
		str exec '#!/bin/bash
			set -e
			if [ -d "$(/config/files/obj)" ]; then
				COMMAND="rm -rf $(/config/files/obj)"
				printf "	\$COMMAND\\n"
				$COMMAND
			fi

			COMMAND="mkdir $(/config/files/obj)"
			printf "	\$COMMAND\\n"
			$COMMAND

			if [ -f $(/config/files/libfile) ]; then
				COMMAND="rm $(/config/files/libfile)"
				printf "	\$COMMAND\\n"
				$COMMAND
			fi
		'
	end

	section build
		list str c_rules 'libsources', 'linklib', 'testsources', 'linktest'
		str target_cflags ''
	end

	section install
		str exec '#!/bin/bash
				set -e

				if [[ -z "${INSTALL_PREFIX}" ]]; then
					INSTALL_PREFIX="/usr"
				fi

				LIBDIR="$INSTALL_PREFIX/lib"

				_install() {
					echo "  -> Installing $1"
					COMMAND="install $2"
					echo "      $COMMAND"
					eval $COMMAND
				}

				_install "shared library" "-Dm 755 ./libmastr.so $LIBDIR/libmastr.so"
		'
	end

end

sector c_rules
	section libsources
		str exec_mode 'singular'

		str input_src '/config/files/sources'
		str input_format '$(/config/files/src)$(%element%).c'
		str output_format '$(/config/files/obj)$(%element%).o'

		str exec '#!/bin/bash
			set -e

			if [ ! -d \$(dirname $(%output%)) ]; then
				mkdir -p \$(dirname $(%output%))
			fi


			COMMAND="$(/config/mariebuild/cc) $(/config/mariebuild/cflags) $(%target_cflags%) -c -o $(%output%) $(%input%)"
			printf "	\$COMMAND\\n"
			$COMMAND
		'
	end

	section linklib
		str exec_mode 'unify'
		str build_type 'full'

		str input_src '/config/files/sources'
		str input_format '$(/config/files/obj)$(%element%).o'
		str output_format '$(/config/files/libfile)'

		str exec '#!/bin/bash
			set -e

			printf " -> creating static library\\n"
			COMMAND="ar -rc $(/config/files/libfile) $(%input%)"
			printf "	\$COMMAND\\n"
			$COMMAND

			COMMAND="ranlib $(/config/files/libfile)"
			printf "	\$COMMAND\\n"
			$COMMAND

			printf " -> linking dynamic library\\n"
			COMMAND="$(/config/mariebuild/cc) -shared -o $(/config/files/dylibfile) $(%input%)"
			printf "	$COMMAND\\n"
			$COMMAND
		'
	end

	section testsources
		str exec_mode 'singular'

		str input_src '/config/files/test_sources'
		str input_format '$(/config/files/src)$(%element%).c'
		str output_format '$(/config/files/obj)$(%element%).o'

		str exec '#!/bin/bash
			set -e

			if [ ! -d \$(dirname $(%output%)) ]; then
				mkdir -p \$(dirname $(%output%))
			fi

			COMMAND="$(/config/mariebuild/cc) $(/config/mariebuild/cflags) -c -o $(%output%) $(%input%)"
			printf "	\$COMMAND\\n"
			$COMMAND
		'
	end

	section linktest
		str exec_mode 'unify'
		str build_type 'full'

		str input_src '/config/files/test_sources'
		str input_format '$(/config/files/obj)$(%element%).o'
		str output_format '$(/config/files/testfile)'

		str exec '#!/bin/bash
			set -e

			COMMAND="$(/config/mariebuild/cc) $(/config/mariebuild/cflags) -o $(%output%) $(%input%) $(/config/mariebuild/ldflags)"
			printf "	\$COMMAND\\n"
			$COMMAND
		'
	end
end
